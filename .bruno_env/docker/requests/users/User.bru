meta {
  name: User
  type: http
  seq: 5
}

get {
  url: {{host}}/users/{{users_user_id}}.json
  body: json
  auth: inherit
}

headers {
  Authorization: Bearer {{jwt_token}}
  Accept: application/json
}

tests {
  /*
  test("Extract edith@passbolt.com user_id", () => {
    const data = JSON.parse(res.body);
    const edith = data.body.find(user => user.username === "edith@passbolt.com");
  
    if (!edith) {
      throw new Error("User not found: edith@passbolt.com");
    }
  
    bru.setEnvVar("edith_user_id", edith.id);
  });
  
  test("Verify edith_user_id exists", () => {
    if (!bru.getEnvVar("edith_user_id")) {
      throw new Error("edith_user_id was not set.");
    }
  });
  */
}
